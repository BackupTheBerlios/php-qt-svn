/*
 * PHP-Qt - The PHP language bindings for Qt
 *
 * Copyright (C) 2006
 * Thomas Moenicke <tm@ippfp.org>,
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * QInputEvent.cpp - QInputEvent PHP implementation.
 * begin           : Tue Jun  6 22:42:56 2006
 * generated by    : moni using kalyptus 0.9.
 */

#include <iostream>
using namespace std;

#include "../php_qt.h"


#include <QInputEvent>
/// DEBUG:destructor skipped.
#include <QMetaMethod>
class QInputEvent_php_qt:public QInputEvent
{

public:
  QInputEvent_php_qt(zval * zend_ptr, Type types0, Qt::KeyboardModifiers modifiers = Qt::NoModifier);


  zval *zend_ptr;
};

QInputEvent_php_qt::QInputEvent_php_qt(zval * zend_ptr, Type types0, Qt::KeyboardModifiers modifiers):QInputEvent(types0, modifiers)
{
  this->zend_ptr = zend_ptr;
}

/*!
 * method QInputEvent
 * 
 * @param: -
 * 
 * overloaded args:
 * @param	Type types0s0
 * @param	 Qt::KeyboardModifiers modifiers = Qt::NoModifiers1
 * 
 * @access	public
 * @return	
 * @flags	
 */

ZEND_METHOD(QInputEvent, __construct)
{
// notice: unknown argument Type types0s0, skipped
  php_error(E_ERROR, "could not parse argument in QInputEvent::QInputEvent(...) ");
}

/*!
 * method modifiers
 * 
 * @param: -
 * @param: -
 * 
 * @access	public
 * @return	Qt::KeyboardModifiers
 * @flags	c
 */

ZEND_METHOD(QInputEvent, modifiers)
{
  ///
  if (ZEND_NUM_ARGS() == 0) {
    PHP_QT_FETCH_0_ARGS();
    if (1) {
      if (getThis() == NULL) {
        php_error(E_ERROR, "method 'modifiers' is not static");
        RETURN_NULL();
      }
      /// try 
      QInputEvent *
        selfpointer;

      if (getThis() != NULL) {
        selfpointer = static_cast < QInputEvent * >(PHP_QT_FETCH());
      }
      RETURN_LONG(selfpointer->modifiers());
    }
  }
  php_error(E_ERROR, "could not parse argument in QInputEvent::modifiers(...) ");
}
