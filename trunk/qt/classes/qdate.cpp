/*
 * PHP-Qt - The PHP language bindings for Qt
 *
 * Copyright (C) 2005
 * Thomas Moenicke <tm@ippfp.org>,
 * Jean-Luc Gyger <jean_luc.gyger@freesurf.ch>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * QDate.cpp - QDate PHP implementation.
 * begin           : Sun Jan  8 02:08:27 2006
 * generated by    : moni using kalyptus 0.9.
 */

#include <iostream>
using namespace std;

#include <QDate>
#include "../php_qt.h"


/*********************************
 *    class     QDate */
/*
 *    function  longDayName
 *    flags:    s
 */
ZEND_METHOD(QDate, longDayName){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  dayOfWeek
 *    flags:    c
 */
ZEND_METHOD(QDate, dayOfWeek){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			RETURN_LONG(obj->dayOfWeek());
}

/*********************************
 *    class     QDate */
/*
 *    function  daysInMonth
 *    flags:    c
 */
ZEND_METHOD(QDate, daysInMonth){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			RETURN_LONG(obj->daysInMonth());
}

/*********************************
 *    class     QDate */
/*
 *    function  month
 *    flags:    c
 */
ZEND_METHOD(QDate, month){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			RETURN_LONG(obj->month());
}

/*********************************
 *    class     QDate */
/*
 *    function  isValid
 *    flags:    c
 */
ZEND_METHOD(QDate, isValid){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			RETURN_BOOL(obj->isValid());

	if (ZEND_NUM_ARGS() == 3){
		/* lll */
		long var_lll_0;    // default: 
		long var_lll_1;    // default: 
		long var_lll_2;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lll", &var_lll_0, &var_lll_1, &var_lll_2) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  setYMD
 *    flags:    
 */
ZEND_METHOD(QDate, setYMD){

	if (ZEND_NUM_ARGS() == 3){
		/* lll */
		long var_lll_0;    // default: 
		long var_lll_1;    // default: 
		long var_lll_2;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lll", &var_lll_0, &var_lll_1, &var_lll_2) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  shortMonthName
 *    flags:    s
 */
ZEND_METHOD(QDate, shortMonthName){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  toString
 *    flags:    c
 */
ZEND_METHOD(QDate, toString){

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: Qt::TextDate
		int* len_s_0;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s|", &var_s_0, &len_s_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
		/* o */
		zval* z_var_o_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_1) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();
			QObject* var_o_1 = (QObject*) php_qt_fetch(z_var_o_1);

			QString tmp_o_0(var_o_1->metaObject()->className());
			
			if(tmp_o_0 == "const QString&") {
				QString return_object = (QString) obj->toString((const QString&) var_o_1);
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QDate_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
			}
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  isLeapYear
 *    flags:    s
 */
ZEND_METHOD(QDate, isLeapYear){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  fromJulianDay
 *    flags:    s
 */
ZEND_METHOD(QDate, fromJulianDay){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  currentDate
 *    flags:    s
 */
ZEND_METHOD(QDate, currentDate){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			QDate return_object = (QDate) obj->currentDate();
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QDate_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
}

/*********************************
 *    class     QDate */
/*
 *    function  addDays
 *    flags:    c
 */
ZEND_METHOD(QDate, addDays){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  day
 *    flags:    c
 */
ZEND_METHOD(QDate, day){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			RETURN_LONG(obj->day());
}

/*********************************
 *    class     QDate */
/*
 *    function  gregorianToJulian
 *    flags:    s
 */
ZEND_METHOD(QDate, gregorianToJulian){

	if (ZEND_NUM_ARGS() == 3){
		/* lll */
		long var_lll_0;    // default: 
		long var_lll_1;    // default: 
		long var_lll_2;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lll", &var_lll_0, &var_lll_1, &var_lll_2) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  longMonthName
 *    flags:    s
 */
ZEND_METHOD(QDate, longMonthName){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  julianToGregorian
 *    flags:    s
 */
ZEND_METHOD(QDate, julianToGregorian){

	if (ZEND_NUM_ARGS() == 4){
		/* llll */
		long var_llll_0;    // default: 
		long var_llll_1;    // default: 
		long var_llll_2;    // default: 
		long var_llll_3;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"llll", &var_llll_0, &var_llll_1, &var_llll_2, &var_llll_3) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  shortDayName
 *    flags:    s
 */
ZEND_METHOD(QDate, shortDayName){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  fromString
 *    flags:    s
 */
ZEND_METHOD(QDate, fromString){

	if (ZEND_NUM_ARGS() == 2){
		/* oo */
		zval* z_var_oo_0;   // default: 
		zval* z_var_oo_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"oo", &z_var_oo_0, &z_var_oo_1) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();
			QObject* var_oo_0 = (QObject*) php_qt_fetch(z_var_oo_0);
			QObject* var_oo_1 = (QObject*) php_qt_fetch(z_var_oo_1);

			QString tmp_oo_0(var_oo_0->metaObject()->className());
			QString tmp_oo_1(var_oo_1->metaObject()->className());
			
			if(tmp_oo_0 == "const QString&" && tmp_oo_1 == "const QString&") {
				QDate return_object = (QDate) obj->fromString((const QString&) var_oo_0, (const QString&) var_oo_1);
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QDate_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
			}
		}
		/* os */
		zval* z_var_os_2;   // default: 
		char* var_os_3;   // default: Qt::TextDate
		int* len_os_3;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"os|", &z_var_os_2, &var_os_3, &len_os_3) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();
			QObject* var_os_2 = (QObject*) php_qt_fetch(z_var_os_2);

			QString tmp_os_0(var_os_2->metaObject()->className());
			
			if(tmp_os_0 == "const QString&") {
				QDate return_object = (QDate) obj->fromString((const QString&) var_os_2, (const char*) var_os_3);
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QDate_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
			}
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  dayOfYear
 *    flags:    c
 */
ZEND_METHOD(QDate, dayOfYear){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			RETURN_LONG(obj->dayOfYear());
}

/*********************************
 *    class     QDate */
/*
 *    function  weekNumber
 *    flags:    c
 */
ZEND_METHOD(QDate, weekNumber){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 0

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l|", &var_l_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  addMonths
 *    flags:    c
 */
ZEND_METHOD(QDate, addMonths){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  toJulianDay
 *    flags:    c
 */
ZEND_METHOD(QDate, toJulianDay){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			RETURN_LONG(obj->toJulianDay());
}

/*********************************
 *    class     QDate */
/*
 *    function  addYears
 *    flags:    c
 */
ZEND_METHOD(QDate, addYears){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();

			
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  daysTo
 *    flags:    c
 */
ZEND_METHOD(QDate, daysTo){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QDate *obj = (QDate*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "const QDate&") {
				RETURN_LONG(obj->daysTo((const QDate&) var_o_0));
			}
		}
	}
}

/*********************************
 *    class     QDate */
/*
 *    function  isNull
 *    flags:    c
 */
ZEND_METHOD(QDate, isNull){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			RETURN_BOOL(obj->isNull());
}

/*********************************
 *    class     QDate */
/*
 *    function  year
 *    flags:    c
 */
ZEND_METHOD(QDate, year){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			RETURN_LONG(obj->year());
}

/*********************************
 *    class     QDate */
/*
 *    function  daysInYear
 *    flags:    c
 */
ZEND_METHOD(QDate, daysInYear){
			QDate *obj = (QDate*) PHP_QT_FETCH();
			RETURN_LONG(obj->daysInYear());
}



ZEND_METHOD(QDate,__construct){

	QDate *QDate_ptr = new QDate();


	if(ZEND_NUM_ARGS() == 3){
		zval* param_0;
		zval* param_1;
		zval* param_2;
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"zzz", &param_0, &param_1, &param_2) == FAILURE) {
			return;
		}
		 /*long y int*/
/*		if(Z_TYPE_P(param_0) == IS_LONG) {
			int tmp(Z_STRVAL_P(param_0));
			QDate_ptr = new QDate(tmp);
		}
*/		 /*long m int*/
/*		if(Z_TYPE_P(param_1) == IS_LONG) {
			int tmp(Z_STRVAL_P(param_1));
			QDate_ptr = new QDate(tmp);
		}
*/		 /*long d int*/
/*		if(Z_TYPE_P(param_2) == IS_LONG) {
			int tmp(Z_STRVAL_P(param_2));
			QDate_ptr = new QDate(tmp);
		}
*/	}

	PHP_QT_REGISTER(QDate_ptr);
	RETURN_NULL();
}

PHP_QT_DESTRUCT(QDate);

