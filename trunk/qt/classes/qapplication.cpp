/*
 * PHP-Qt - The PHP language bindings for Qt
 *
 * Copyright (C) 2005
 * Thomas Moenicke <tm@ippfp.org>,
 * Jean-Luc Gyger <jean_luc.gyger@freesurf.ch>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * QApplication.cpp - QApplication PHP implementation.
 * begin           : Wed Jan 11 20:29:53 2006
 * generated by    : moni using kalyptus 0.9.
 */

#include <iostream>
using namespace std;

#include <QApplication>
#include "../php_qt.h"



/*		public enumType:long {
			Type = 0,
			Type = 1,
			Type = 2
		}
*/

/*		public enumColorSpec:long {
			NormalColor = 0,
			CustomColor = 1,
			ManyColor = 2
		}
*/
/*********************************
 *    class     QApplication */
/*
 *    function  sessionKey
 *    flags:    c
 */
ZEND_METHOD(QApplication, sessionKey){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QString return_object = (QString) obj->sessionKey();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  tr
 *    flags:    s
 */
ZEND_METHOD(QApplication, tr){

	if (ZEND_NUM_ARGS() == 2){
		/* ss */
		char* var_ss_0;   // default: 
		int len_ss_0;

		char* var_ss_1;   // default: 0
		int len_ss_1;


		/* const char* , const char* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ss|", &var_ss_0, len_ss_0, &var_ss_1, len_ss_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			QString return_object = (QString) obj->tr( (const char*) var_ss_0 , (const char*) var_ss_1);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  clipboard
 *    flags:    s
 */
ZEND_METHOD(QApplication, clipboard){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QClipboard * return_object = (QClipboard *) obj->clipboard();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  qt_invoke
 *    flags:    v
 */
ZEND_METHOD(QApplication, qt_invoke){

	if (ZEND_NUM_ARGS() == 2){
		/* lo */
		long var_lo_0;    // default: 
		zval* z_var_lo_1;   // default: 

		/* int , QUObject* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lo", &var_lo_0, &z_var_lo_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_lo_1 = (QObject*) php_qt_fetch(z_var_lo_1);

			QString tmp_lo_0(var_lo_1->metaObject()->className());
			
			if(tmp_lo_0 == "QUObject*") {
				RETURN_BOOL(obj->qt_invoke((int) var_lo_0, (QUObject*) var_lo_1));
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  commitData
 *    flags:    v
 */
ZEND_METHOD(QApplication, commitData){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		/* QSessionManager& sm,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QSessionManager&") {
				obj->commitData((QSessionManager&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  startDragTime
 *    flags:    s
 */
ZEND_METHOD(QApplication, startDragTime){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_LONG(obj->startDragTime());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  sessionId
 *    flags:    c
 */
ZEND_METHOD(QApplication, sessionId){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QString return_object = (QString) obj->sessionId();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  isSessionRestored
 *    flags:    c
 */
ZEND_METHOD(QApplication, isSessionRestored){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_BOOL(obj->isSessionRestored());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setColorSpec
 *    flags:    s
 */
ZEND_METHOD(QApplication, setColorSpec){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* int ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setColorSpec((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setStartDragDistance
 *    flags:    s
 */
ZEND_METHOD(QApplication, setStartDragDistance){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* int l,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setStartDragDistance((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  qt_cast
 *    flags:    v
 */
ZEND_METHOD(QApplication, qt_cast){

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: 
		int len_s_0;


		/* const char* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s", &var_s_0, len_s_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->qt_cast( (const char*) var_s_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setLayoutDirection
 *    flags:    s
 */
ZEND_METHOD(QApplication, setLayoutDirection){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* int direction,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setLayoutDirection((Qt::LayoutDirection) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  keyboardInputInterval
 *    flags:    s
 */
ZEND_METHOD(QApplication, keyboardInputInterval){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_LONG(obj->keyboardInputInterval());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  allWidgets
 *    flags:    s
 */
ZEND_METHOD(QApplication, allWidgets){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QWidgetList return_object = (QWidgetList) obj->allWidgets();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  metaObject
 *    flags:    cv
 */
ZEND_METHOD(QApplication, metaObject){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QMetaObject * return_object = (QMetaObject *) obj->metaObject();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setCursorFlashTime
 *    flags:    s
 */
ZEND_METHOD(QApplication, setCursorFlashTime){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* int ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setCursorFlashTime((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setWheelScrollLines
 *    flags:    s
 */
ZEND_METHOD(QApplication, setWheelScrollLines){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* int ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setWheelScrollLines((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  qt_emit
 *    flags:    v
 */
ZEND_METHOD(QApplication, qt_emit){

	if (ZEND_NUM_ARGS() == 2){
		/* lo */
		long var_lo_0;    // default: 
		zval* z_var_lo_1;   // default: 

		/* int , QUObject* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lo", &var_lo_0, &z_var_lo_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_lo_1 = (QObject*) php_qt_fetch(z_var_lo_1);

			QString tmp_lo_0(var_lo_1->metaObject()->className());
			
			if(tmp_lo_0 == "QUObject*") {
				RETURN_BOOL(obj->qt_emit((int) var_lo_0, (QUObject*) var_lo_1));
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setEffectEnabled
 *    flags:    s
 */
ZEND_METHOD(QApplication, setEffectEnabled){

	if (ZEND_NUM_ARGS() == 2){
		/* lb */
		long var_lb_0;    // default: 
		bool var_lb_1;   // _default: true

		/* int , bool enable,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lb|", &var_lb_0, &var_lb_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setEffectEnabled((Qt::UIEffect) var_lb_0 ,(bool) var_lb_1);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  className
 *    flags:    cv
 */
ZEND_METHOD(QApplication, className){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			const char * return_object = (const char *) obj->className();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setStyle
 *    flags:    s
 */
ZEND_METHOD(QApplication, setStyle){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		/* QStyle* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QStyle*") {
				QStyle * return_object = (QStyle *) obj->setStyle((QStyle*) var_o_0);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
			}			
			if(tmp_o_0 == "const QString&") {
				QStyle * return_object = (QStyle *) obj->setStyle((const QString&) var_o_0);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  isRightToLeft
 *    flags:    s
 */
ZEND_METHOD(QApplication, isRightToLeft){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_BOOL(obj->isRightToLeft());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setDesktopSettingsAware
 *    flags:    s
 */
ZEND_METHOD(QApplication, setDesktopSettingsAware){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool var_b_0;   // _default: 

		/* bool ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setDesktopSettingsAware((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  inputContext
 *    flags:    c
 */
ZEND_METHOD(QApplication, inputContext){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QInputContext * return_object = (QInputContext *) obj->inputContext();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  palette
 *    flags:    s
 */
ZEND_METHOD(QApplication, palette){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QPalette return_object = (QPalette) obj->palette();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: 
		int len_s_0;


		/* const char* className,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s", &var_s_0, len_s_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			QPalette return_object = (QPalette) obj->palette( (const char*) var_s_0);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
		/* o */
		zval* z_var_o_1;   // default: 

		/* const QWidget* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_1 = (QObject*) php_qt_fetch(z_var_o_1);

			QString tmp_o_0(var_o_1->metaObject()->className());
			
			if(tmp_o_0 == "const QWidget*") {
				QPalette return_object = (QPalette) obj->palette((const QWidget*) var_o_1);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  desktopSettingsAware
 *    flags:    s
 */
ZEND_METHOD(QApplication, desktopSettingsAware){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_BOOL(obj->desktopSettingsAware());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  fontMetrics
 *    flags:    s
 */
ZEND_METHOD(QApplication, fontMetrics){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QFontMetrics return_object = (QFontMetrics) obj->fontMetrics();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  desktop
 *    flags:    s
 */
ZEND_METHOD(QApplication, desktop){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QDesktopWidget * return_object = (QDesktopWidget *) obj->desktop();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  staticMetaObject
 *    flags:    s
 */
ZEND_METHOD(QApplication, staticMetaObject){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QMetaObject* return_object = (QMetaObject*) obj->staticMetaObject();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  colorSpec
 *    flags:    s
 */
ZEND_METHOD(QApplication, colorSpec){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_LONG(obj->colorSpec());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  quitOnLastWindowClosed
 *    flags:    s
 */
ZEND_METHOD(QApplication, quitOnLastWindowClosed){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_BOOL(obj->quitOnLastWindowClosed());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  qObject
 *    flags:    
 */
ZEND_METHOD(QApplication, qObject){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* return_object = (QObject*) obj->qObject();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  wheelScrollLines
 *    flags:    s
 */
ZEND_METHOD(QApplication, wheelScrollLines){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_LONG(obj->wheelScrollLines());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  mouseButtons
 *    flags:    s
 */
ZEND_METHOD(QApplication, mouseButtons){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			Qt::MouseButtons return_object = (Qt::MouseButtons) obj->mouseButtons();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  topLevelWidgets
 *    flags:    s
 */
ZEND_METHOD(QApplication, topLevelWidgets){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QWidgetList return_object = (QWidgetList) obj->topLevelWidgets();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  QApplication
 *    flags:    
 */
ZEND_METHOD(QApplication, __construct){

	if (ZEND_NUM_ARGS() == 2){
		/* ll */
		long var_ll_0;    // default: 
		long var_ll_1;    // default: 

		/* int& argc, char* * argv,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ll", &var_ll_0, &var_ll_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			QApplication *QApplication_ptr = new QApplication((int&) var_ll_0 ,(char* *) var_ll_1);
			PHP_QT_REGISTER(QApplication_ptr);
			RETURN_NULL();
		}
	}

	if (ZEND_NUM_ARGS() == 3){
		/* llb */
		long var_llb_0;    // default: 
		long var_llb_1;    // default: 
		bool var_llb_2;   // _default: 

		/* int& argc, char* * argv, bool GUIenabled,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"llb", &var_llb_0, &var_llb_1, &var_llb_2) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			QApplication *QApplication_ptr = new QApplication((int&) var_llb_0 ,(char* *) var_llb_1 ,(bool) var_llb_2);
			PHP_QT_REGISTER(QApplication_ptr);
			RETURN_NULL();
		}
		/* llo */
		long var_llo_3;    // default: 
		long var_llo_4;    // default: 
		zval* z_var_llo_5;   // default: 

		/* int& argc, char* * argv, Type ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"llo", &var_llo_3, &var_llo_4, &z_var_llo_5) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_llo_5 = (QObject*) php_qt_fetch(z_var_llo_5);

			QString tmp_llo_0(var_llo_5->metaObject()->className());
			
			if(tmp_llo_0 == "Type") {
				QApplication *QApplication_ptr = new QApplication((int&) var_llo_3, (char* *) var_llo_4, (Type) var_llo_5);
			PHP_QT_REGISTER(QApplication_ptr);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  aboutQt
 *    flags:    sl
 */
ZEND_METHOD(QApplication, aboutQt){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			obj->aboutQt();
			RETURN_NULL();
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  layoutDirection
 *    flags:    s
 */
ZEND_METHOD(QApplication, layoutDirection){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			Qt::LayoutDirection return_object = (Qt::LayoutDirection) obj->layoutDirection();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  windowIcon
 *    flags:    s
 */
ZEND_METHOD(QApplication, windowIcon){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			obj->windowIcon();
			RETURN_NULL();
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  style
 *    flags:    s
 */
ZEND_METHOD(QApplication, style){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QStyle * return_object = (QStyle *) obj->style();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  activeModalWidget
 *    flags:    s
 */
ZEND_METHOD(QApplication, activeModalWidget){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QWidget * return_object = (QWidget *) obj->activeModalWidget();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setKeyboardInputInterval
 *    flags:    s
 */
ZEND_METHOD(QApplication, setKeyboardInputInterval){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* int ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setKeyboardInputInterval((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  restoreOverrideCursor
 *    flags:    s
 */
ZEND_METHOD(QApplication, restoreOverrideCursor){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			obj->restoreOverrideCursor();
			RETURN_NULL();
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  qt_property
 *    flags:    v
 */
ZEND_METHOD(QApplication, qt_property){

	if (ZEND_NUM_ARGS() == 3){
		/* llo */
		long var_llo_0;    // default: 
		long var_llo_1;    // default: 
		zval* z_var_llo_2;   // default: 

		/* int , int , QVariant* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"llo", &var_llo_0, &var_llo_1, &z_var_llo_2) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_llo_2 = (QObject*) php_qt_fetch(z_var_llo_2);

			QString tmp_llo_0(var_llo_2->metaObject()->className());
			
			if(tmp_llo_0 == "QVariant*") {
				RETURN_BOOL(obj->qt_property((int) var_llo_0, (int) var_llo_1, (QVariant*) var_llo_2));
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setDoubleClickInterval
 *    flags:    s
 */
ZEND_METHOD(QApplication, setDoubleClickInterval){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* int ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setDoubleClickInterval((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  activeWindow
 *    flags:    s
 */
ZEND_METHOD(QApplication, activeWindow){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QWidget * return_object = (QWidget *) obj->activeWindow();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setActiveWindow
 *    flags:    s
 */
ZEND_METHOD(QApplication, setActiveWindow){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		/* QWidget* act,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QWidget*") {
				obj->setActiveWindow((QWidget*) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  widgetAt
 *    flags:    s
 */
ZEND_METHOD(QApplication, widgetAt){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* const QPoint& p,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			QWidget * return_object = (QWidget *) obj->widgetAt((const QPoint&) var_l_0);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}

	if (ZEND_NUM_ARGS() == 2){
		/* ll */
		long var_ll_0;    // default: 
		long var_ll_1;    // default: 

		/* int x, int y,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ll", &var_ll_0, &var_ll_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			QWidget * return_object = (QWidget *) obj->widgetAt((int) var_ll_0 ,(int) var_ll_1);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  isEffectEnabled
 *    flags:    s
 */
ZEND_METHOD(QApplication, isEffectEnabled){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* int ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			RETURN_BOOL(obj->isEffectEnabled((Qt::UIEffect) var_l_0));
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setPalette
 *    flags:    s
 */
ZEND_METHOD(QApplication, setPalette){

	if (ZEND_NUM_ARGS() == 2){
		/* os */
		zval* z_var_os_0;   // default: 
		char* var_os_1;   // default: 0
		int len_os_1;


		/* const QPalette& , const char* className,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"os|", &z_var_os_0, &var_os_1, len_os_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_os_0 = (QObject*) php_qt_fetch(z_var_os_0);

			QString tmp_os_0(var_os_0->metaObject()->className());
			
			if(tmp_os_0 == "const QPalette&") {
				obj->setPalette((const QPalette&) var_os_0, (const char*) var_os_1);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  doubleClickInterval
 *    flags:    s
 */
ZEND_METHOD(QApplication, doubleClickInterval){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_LONG(obj->doubleClickInterval());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  font
 *    flags:    s
 */
ZEND_METHOD(QApplication, font){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 0

		/* const QWidget* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o|", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "const QWidget*") {
				QFont return_object = (QFont) obj->font((const QWidget*) var_o_0);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  globalStrut
 *    flags:    s
 */
ZEND_METHOD(QApplication, globalStrut){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QSize return_object = (QSize) obj->globalStrut();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setGlobalStrut
 *    flags:    s
 */
ZEND_METHOD(QApplication, setGlobalStrut){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		/* const QSize& ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "const QSize&") {
				obj->setGlobalStrut((const QSize&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  exec
 *    flags:    s
 */
ZEND_METHOD(QApplication, exec){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_LONG(obj->exec());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  changeOverrideCursor
 *    flags:    s
 */
ZEND_METHOD(QApplication, changeOverrideCursor){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		/* const QCursor& ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "const QCursor&") {
				obj->changeOverrideCursor((const QCursor&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setWindowIcon
 *    flags:    s
 */
ZEND_METHOD(QApplication, setWindowIcon){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		/* const QIcon& icon,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "const QIcon&") {
				obj->setWindowIcon((const QIcon&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  keyboardModifiers
 *    flags:    s
 */
ZEND_METHOD(QApplication, keyboardModifiers){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			Qt::KeyboardModifiers return_object = (Qt::KeyboardModifiers) obj->keyboardModifiers();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  event
 *    flags:    
 */
ZEND_METHOD(QApplication, event){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		/* QEvent* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QEvent*") {
				RETURN_BOOL(obj->event((QEvent*) var_o_0));
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  beep
 *    flags:    s
 */
ZEND_METHOD(QApplication, beep){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			obj->beep();
			RETURN_NULL();
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  overrideCursor
 *    flags:    s
 */
ZEND_METHOD(QApplication, overrideCursor){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QCursor * return_object = (QCursor *) obj->overrideCursor();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  isLeftToRight
 *    flags:    s
 */
ZEND_METHOD(QApplication, isLeftToRight){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_BOOL(obj->isLeftToRight());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  syncX
 *    flags:    s
 */
ZEND_METHOD(QApplication, syncX){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			obj->syncX();
			RETURN_NULL();
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  type
 *    flags:    s
 */
ZEND_METHOD(QApplication, type){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_LONG(obj->type());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setOverrideCursor
 *    flags:    s
 */
ZEND_METHOD(QApplication, setOverrideCursor){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		/* const QCursor& ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "const QCursor&") {
				obj->setOverrideCursor((const QCursor&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  focusWidget
 *    flags:    s
 */
ZEND_METHOD(QApplication, focusWidget){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QWidget * return_object = (QWidget *) obj->focusWidget();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  topLevelAt
 *    flags:    s
 */
ZEND_METHOD(QApplication, topLevelAt){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* const QPoint& p,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			QWidget * return_object = (QWidget *) obj->topLevelAt((const QPoint&) var_l_0);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}

	if (ZEND_NUM_ARGS() == 2){
		/* ll */
		long var_ll_0;    // default: 
		long var_ll_1;    // default: 

		/* int x, int y,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ll", &var_ll_0, &var_ll_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			QWidget * return_object = (QWidget *) obj->topLevelAt((int) var_ll_0 ,(int) var_ll_1);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  cursorFlashTime
 *    flags:    s
 */
ZEND_METHOD(QApplication, cursorFlashTime){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_LONG(obj->cursorFlashTime());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  startDragDistance
 *    flags:    s
 */
ZEND_METHOD(QApplication, startDragDistance){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			RETURN_LONG(obj->startDragDistance());
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  closeAllWindows
 *    flags:    sl
 */
ZEND_METHOD(QApplication, closeAllWindows){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			obj->closeAllWindows();
			RETURN_NULL();
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setFont
 *    flags:    s
 */
ZEND_METHOD(QApplication, setFont){

	if (ZEND_NUM_ARGS() == 2){
		/* os */
		zval* z_var_os_0;   // default: 
		char* var_os_1;   // default: 0
		int len_os_1;


		/* const QFont& , const char* className,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"os|", &z_var_os_0, &var_os_1, len_os_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_os_0 = (QObject*) php_qt_fetch(z_var_os_0);

			QString tmp_os_0(var_os_0->metaObject()->className());
			
			if(tmp_os_0 == "const QFont&") {
				obj->setFont((const QFont&) var_os_0, (const char*) var_os_1);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  notify
 *    flags:    
 */
ZEND_METHOD(QApplication, notify){

	if (ZEND_NUM_ARGS() == 2){
		/* oo */
		zval* z_var_oo_0;   // default: 
		zval* z_var_oo_1;   // default: 

		/* QObject* , QEvent* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"oo", &z_var_oo_0, &z_var_oo_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_oo_0 = (QObject*) php_qt_fetch(z_var_oo_0);
			QObject* var_oo_1 = (QObject*) php_qt_fetch(z_var_oo_1);

			QString tmp_oo_0(var_oo_0->metaObject()->className());
			QString tmp_oo_1(var_oo_1->metaObject()->className());
			
			if(tmp_oo_0 == "QObject*" && tmp_oo_1 == "QEvent*") {
				RETURN_BOOL(obj->notify((QObject*) var_oo_0, (QEvent*) var_oo_1));
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setStartDragTime
 *    flags:    s
 */
ZEND_METHOD(QApplication, setStartDragTime){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		/* int ms,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setStartDragTime((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  activePopupWidget
 *    flags:    s
 */
ZEND_METHOD(QApplication, activePopupWidget){
	if (ZEND_NUM_ARGS() == 0){
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QWidget * return_object = (QWidget *) obj->activePopupWidget();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setInputContext
 *    flags:    
 */
ZEND_METHOD(QApplication, setInputContext){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		/* QInputContext* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QInputContext*") {
				obj->setInputContext((QInputContext*) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  setQuitOnLastWindowClosed
 *    flags:    s
 */
ZEND_METHOD(QApplication, setQuitOnLastWindowClosed){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool var_b_0;   // _default: 

		/* bool quit,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			obj->setQuitOnLastWindowClosed((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  trUtf8
 *    flags:    s
 */
ZEND_METHOD(QApplication, trUtf8){

	if (ZEND_NUM_ARGS() == 2){
		/* ss */
		char* var_ss_0;   // default: 
		int len_ss_0;

		char* var_ss_1;   // default: 0
		int len_ss_1;


		/* const char* , const char* ,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ss|", &var_ss_0, len_ss_0, &var_ss_1, len_ss_1) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();

			
			QString return_object = (QString) obj->trUtf8( (const char*) var_ss_0 , (const char*) var_ss_1);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QApplication_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}
}

/*********************************
 *    class     QApplication */
/*
 *    function  saveState
 *    flags:    v
 */
ZEND_METHOD(QApplication, saveState){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		/* QSessionManager& sm,  */
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QApplication *obj = (QApplication*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QSessionManager&") {
				obj->saveState((QSessionManager&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}


PHP_QT_DESTRUCT(QApplication);

