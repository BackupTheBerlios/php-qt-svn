/*
 * PHP-Qt - The PHP language bindings for Qt
 *
 * Copyright (C) 2005
 * Thomas Moenicke <tm@ippfp.org>,
 * Jean-Luc Gyger <jean_luc.gyger@freesurf.ch>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * QLatin1String.cpp - QLatin1String PHP implementation.
 * begin           : Sun Jan 22 19:46:39 2006
 * generated by    : moni using kalyptus 0.9.
 */

#include <iostream>
using namespace std;

#include <QLatin1String>
#include "../php_qt.h"


/*********************************
 *    class     QLatin1String */
/*
 *    function  QLatin1String
 *    flags:    t
 */
ZEND_METHOD(QLatin1String, __construct){
		/* s public*/

		/* const char* s,  */

	if (ZEND_NUM_ARGS() == 1){
		zval *z_0; // define ZVAL
		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"z", &z_0) == SUCCESS) {
			if(Z_TYPE_P(z_0) == IS_STRING){


			QLatin1String *QLatin1String_ptr = new QLatin1String( (const char*) Z_STRVAL_P(z_0));
				PHP_QT_REGISTER(QLatin1String_ptr);
				RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QLatin1String */
/*
 *    function  latin1
 *    flags:    c
 */
ZEND_METHOD(QLatin1String, latin1){
	if (ZEND_NUM_ARGS() == 0){
			QLatin1String *obj = (QLatin1String*) PHP_QT_FETCH();
				const char * return_object = (const char *) obj->latin1();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QLatin1String_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = (void*) &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}


PHP_QT_DESTRUCT(QLatin1String);

