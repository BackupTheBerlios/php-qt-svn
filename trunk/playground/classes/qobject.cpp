/*
 * PHP-Qt - The PHP language bindings for Qt
 *
 * Copyright (C) 2005
 * Thomas Moenicke <tm@ippfp.org>,
 * Jean-Luc Gyger <jean_luc.gyger@freesurf.ch>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * QObject.cpp - QObject PHP implementation.
 * begin           : Sun Jan  8 23:20:48 2006
 * generated by    : moni using kalyptus 0.9.
 */

#include <iostream>
using namespace std;

#include <QObject>
#include "../php_qt.h"


/*********************************
 *    class     QObject */
/*
 *    function  removeEventFilter
 *    flags:    
 */
ZEND_METHOD(QObject, removeEventFilter){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QObject*") {
				obj->removeEventFilter((QObject*) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  connectNotify
 *    flags:    v
 */
ZEND_METHOD(QObject, connectNotify){

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: 
		int len_s_0;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s", &var_s_0, len_s_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

			
			obj->connectNotify( (const char*) var_s_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  tr
 *    flags:    s
 */
ZEND_METHOD(QObject, tr){

	if (ZEND_NUM_ARGS() == 2){
		/* ss */
		char* var_ss_0;   // default: 
		int len_ss_0;

		char* var_ss_1;   // default: 0
		int len_ss_1;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ss|", &var_ss_0, len_ss_0, &var_ss_1, len_ss_1) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

									
			QString return_object = (QString) obj->tr( (const char*) var_ss_0 , (const char*) var_ss_1);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  disconnect
 *    flags:    
 */
ZEND_METHOD(QObject, disconnect){

	if (ZEND_NUM_ARGS() == 2){
		/* os */
		zval* z_var_os_0;   // default: 
		char* var_os_1;   // default: 0
		int len_os_1;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"os|", &z_var_os_0, &var_os_1, len_os_1) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_os_0 = (QObject*) php_qt_fetch(z_var_os_0);

			QString tmp_os_0(var_os_0->metaObject()->className());
			
			if(tmp_os_0 == "const QObject*") {
				RETURN_BOOL(obj->disconnect((const QObject*) var_os_0, (const char*) var_os_1));
			}
		}
	}

	if (ZEND_NUM_ARGS() == 3){
		/* sos */
		char* var_sos_0;   // default: 0
		int len_sos_0;

		zval* z_var_sos_1;   // default: 0
		char* var_sos_2;   // default: 0
		int len_sos_2;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s|o|s|", &var_sos_0, len_sos_0, &z_var_sos_1, &var_sos_2, len_sos_2) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_sos_1 = (QObject*) php_qt_fetch(z_var_sos_1);

			QString tmp_sos_0(var_sos_1->metaObject()->className());
			
			if(tmp_sos_0 == "const QObject*") {
				RETURN_BOOL(obj->disconnect((const char*) var_sos_0, (const QObject*) var_sos_1, (const char*) var_sos_2));
			}
		}
	}

	if (ZEND_NUM_ARGS() == 4){
		/* osos */
		zval* z_var_osos_0;   // default: 
		char* var_osos_1;   // default: 
		int len_osos_1;

		zval* z_var_osos_2;   // default: 
		char* var_osos_3;   // default: 
		int len_osos_3;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"osos", &z_var_osos_0, &var_osos_1, len_osos_1, &z_var_osos_2, &var_osos_3, len_osos_3) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_osos_0 = (QObject*) php_qt_fetch(z_var_osos_0);
			QObject* var_osos_2 = (QObject*) php_qt_fetch(z_var_osos_2);

			QString tmp_osos_0(var_osos_0->metaObject()->className());
			QString tmp_osos_1(var_osos_2->metaObject()->className());
			
			if(tmp_osos_0 == "const QObject*" && tmp_osos_1 == "const QObject*") {
				RETURN_BOOL(obj->disconnect((const QObject*) var_osos_0, (const char*) var_osos_1, (const QObject*) var_osos_2, (const char*) var_osos_3));
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  children
 *    flags:    c
 */
ZEND_METHOD(QObject, children){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			const QObjectList & return_object = (const QObjectList &) obj->children();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  qt_invoke
 *    flags:    v
 */
ZEND_METHOD(QObject, qt_invoke){

	if (ZEND_NUM_ARGS() == 2){
		/* lo */
		long var_lo_0;    // default: 
		zval* z_var_lo_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lo", &var_lo_0, &z_var_lo_1) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_lo_1 = (QObject*) php_qt_fetch(z_var_lo_1);

			QString tmp_lo_0(var_lo_1->metaObject()->className());
			
			if(tmp_lo_0 == "QUObject*") {
				RETURN_BOOL(obj->qt_invoke((int) var_lo_0, (QUObject*) var_lo_1));
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  deleteLater
 *    flags:    l
 */
ZEND_METHOD(QObject, deleteLater){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			obj->deleteLater();
			RETURN_NULL();
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  installEventFilter
 *    flags:    
 */
ZEND_METHOD(QObject, installEventFilter){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QObject*") {
				obj->installEventFilter((QObject*) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  qt_cast
 *    flags:    v
 */
ZEND_METHOD(QObject, qt_cast){

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: 
		int len_s_0;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s", &var_s_0, len_s_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

			
			obj->qt_cast( (const char*) var_s_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  setProperty
 *    flags:    
 */
ZEND_METHOD(QObject, setProperty){

	if (ZEND_NUM_ARGS() == 2){
		/* so */
		char* var_so_0;   // default: 
		int len_so_0;

		zval* z_var_so_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"so", &var_so_0, len_so_0, &z_var_so_1) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_so_1 = (QObject*) php_qt_fetch(z_var_so_1);

			QString tmp_so_0(var_so_1->metaObject()->className());
			
			if(tmp_so_0 == "const QVariant&") {
				RETURN_BOOL(obj->setProperty((const char*) var_so_0, (const QVariant&) var_so_1));
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  disconnectNotify
 *    flags:    v
 */
ZEND_METHOD(QObject, disconnectNotify){

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: 
		int len_s_0;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s", &var_s_0, len_s_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

			
			obj->disconnectNotify( (const char*) var_s_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  property
 *    flags:    c
 */
ZEND_METHOD(QObject, property){

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: 
		int len_s_0;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s", &var_s_0, len_s_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

			
			QVariant return_object = (QVariant) obj->property( (const char*) var_s_0);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  dumpObjectInfo
 *    flags:    
 */
ZEND_METHOD(QObject, dumpObjectInfo){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			obj->dumpObjectInfo();
			RETURN_NULL();
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  registerUserData
 *    flags:    s
 */
ZEND_METHOD(QObject, registerUserData){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			RETURN_LONG(obj->registerUserData());
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  metaObject
 *    flags:    cv
 */
ZEND_METHOD(QObject, metaObject){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QMetaObject * return_object = (QMetaObject *) obj->metaObject();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			const QMetaObject * return_object = (const QMetaObject *) obj->metaObject();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  parent
 *    flags:    c
 */
ZEND_METHOD(QObject, parent){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject * return_object = (QObject *) obj->parent();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  receivers
 *    flags:    c
 */
ZEND_METHOD(QObject, receivers){

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: 
		int len_s_0;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s", &var_s_0, len_s_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

			
			RETURN_LONG(obj->receivers( (const char*) var_s_0));
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  qt_emit
 *    flags:    v
 */
ZEND_METHOD(QObject, qt_emit){

	if (ZEND_NUM_ARGS() == 2){
		/* lo */
		long var_lo_0;    // default: 
		zval* z_var_lo_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lo", &var_lo_0, &z_var_lo_1) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_lo_1 = (QObject*) php_qt_fetch(z_var_lo_1);

			QString tmp_lo_0(var_lo_1->metaObject()->className());
			
			if(tmp_lo_0 == "QUObject*") {
				RETURN_BOOL(obj->qt_emit((int) var_lo_0, (QUObject*) var_lo_1));
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  event
 *    flags:    v
 */
ZEND_METHOD(QObject, event){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QEvent*") {
				RETURN_BOOL(obj->event((QEvent*) var_o_0));
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  className
 *    flags:    cv
 */
ZEND_METHOD(QObject, className){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			const char * return_object = (const char *) obj->className();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  thread
 *    flags:    c
 */
ZEND_METHOD(QObject, thread){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QThread * return_object = (QThread *) obj->thread();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  isWidgetType
 *    flags:    c
 */
ZEND_METHOD(QObject, isWidgetType){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			RETURN_BOOL(obj->isWidgetType());
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  sender
 *    flags:    c
 */
ZEND_METHOD(QObject, sender){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject * return_object = (QObject *) obj->sender();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  signalsBlocked
 *    flags:    c
 */
ZEND_METHOD(QObject, signalsBlocked){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			RETURN_BOOL(obj->signalsBlocked());
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  staticMetaObject
 *    flags:    s
 */
ZEND_METHOD(QObject, staticMetaObject){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QMetaObject* return_object = (QMetaObject*) obj->staticMetaObject();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  setUserData
 *    flags:    
 */
ZEND_METHOD(QObject, setUserData){

	if (ZEND_NUM_ARGS() == 2){
		/* lo */
		long var_lo_0;    // default: 
		zval* z_var_lo_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lo", &var_lo_0, &z_var_lo_1) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_lo_1 = (QObject*) php_qt_fetch(z_var_lo_1);

			QString tmp_lo_0(var_lo_1->metaObject()->className());
			
			if(tmp_lo_0 == "QObjectUserData*") {
				obj->setUserData((uint) var_lo_0, (QObjectUserData*) var_lo_1);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  userData
 *    flags:    c
 */
ZEND_METHOD(QObject, userData){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

			
			QObjectUserData* return_object = (QObjectUserData*) obj->userData((uint) var_l_0);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  qObject
 *    flags:    
 */
ZEND_METHOD(QObject, qObject){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* return_object = (QObject*) obj->qObject();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  setObjectName
 *    flags:    
 */
ZEND_METHOD(QObject, setObjectName){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "const QString&") {
				obj->setObjectName((const QString&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  killTimer
 *    flags:    
 */
ZEND_METHOD(QObject, killTimer){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

			
			obj->killTimer((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  setParent
 *    flags:    
 */
ZEND_METHOD(QObject, setParent){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QObject*") {
				obj->setParent((QObject*) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  moveToThread
 *    flags:    
 */
ZEND_METHOD(QObject, moveToThread){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QThread*") {
				obj->moveToThread((QThread*) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  connect
 *    flags:    c
 */
ZEND_METHOD(QObject, connect){

	if (ZEND_NUM_ARGS() == 4){
		/* ossl */
		zval* z_var_ossl_0;   // default: 
		char* var_ossl_1;   // default: 
		int len_ossl_1;

		char* var_ossl_2;   // default: 
		int len_ossl_2;

		long var_ossl_3;    // default: Qt::AutoConnection

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ossl|", &z_var_ossl_0, &var_ossl_1, len_ossl_1, &var_ossl_2, len_ossl_2, &var_ossl_3) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_ossl_0 = (QObject*) php_qt_fetch(z_var_ossl_0);

			QString tmp_ossl_0(var_ossl_0->metaObject()->className());
			
			if(tmp_ossl_0 == "const QObject*") {
				RETURN_BOOL(obj->connect((const QObject*) var_ossl_0, (const char*) var_ossl_1, (const char*) var_ossl_2, (Qt::ConnectionType) var_ossl_3));
			}
		}
	}

	if (ZEND_NUM_ARGS() == 5){
		/* ososl */
		zval* z_var_ososl_0;   // default: 
		char* var_ososl_1;   // default: 
		int len_ososl_1;

		zval* z_var_ososl_2;   // default: 
		char* var_ososl_3;   // default: 
		int len_ososl_3;

		long var_ososl_4;    // default: Qt::AutoConnection

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ososl|", &z_var_ososl_0, &var_ososl_1, len_ososl_1, &z_var_ososl_2, &var_ososl_3, len_ososl_3, &var_ososl_4) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_ososl_0 = (QObject*) php_qt_fetch(z_var_ososl_0);
			QObject* var_ososl_2 = (QObject*) php_qt_fetch(z_var_ososl_2);

			QString tmp_ososl_0(var_ososl_0->metaObject()->className());
			QString tmp_ososl_1(var_ososl_2->metaObject()->className());
			
			if(tmp_ososl_0 == "const QObject*" && tmp_ososl_1 == "const QObject*") {
				RETURN_BOOL(obj->connect((const QObject*) var_ososl_0, (const char*) var_ososl_1, (const QObject*) var_ososl_2, (const char*) var_ososl_3, (Qt::ConnectionType) var_ososl_4));
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  blockSignals
 *    flags:    
 */
ZEND_METHOD(QObject, blockSignals){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool var_b_0;   // _default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

			
			RETURN_BOOL(obj->blockSignals((bool) var_b_0));
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  objectName
 *    flags:    c
 */
ZEND_METHOD(QObject, objectName){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QString return_object = (QString) obj->objectName();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  QObject
 *    flags:    t
 */
ZEND_METHOD(QObject, __construct){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			RETURN_~(obj->QObject());
	}

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 0

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o|", &z_var_o_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QObject*") {
				obj->QObject((QObject*) var_o_0);
			RETURN_NULL();
			}
		}
	}

	if (ZEND_NUM_ARGS() == 2){
		/* oo */
		zval* z_var_oo_0;   // default: 
		zval* z_var_oo_1;   // default: 0

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"oo|", &z_var_oo_0, &z_var_oo_1) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_oo_0 = (QObject*) php_qt_fetch(z_var_oo_0);
			QObject* var_oo_1 = (QObject*) php_qt_fetch(z_var_oo_1);

			QString tmp_oo_0(var_oo_0->metaObject()->className());
			QString tmp_oo_1(var_oo_1->metaObject()->className());
			
			if(tmp_oo_0 == "QObjectPrivate&" && tmp_oo_1 == "QObject*") {
				obj->QObject((QObjectPrivate&) var_oo_0, (QObject*) var_oo_1);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  dumpObjectTree
 *    flags:    
 */
ZEND_METHOD(QObject, dumpObjectTree){
	if (ZEND_NUM_ARGS() == 0){
			QObject *obj = (QObject*) PHP_QT_FETCH();
			obj->dumpObjectTree();
			RETURN_NULL();
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  startTimer
 *    flags:    
 */
ZEND_METHOD(QObject, startTimer){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

			
			RETURN_LONG(obj->startTimer((int) var_l_0));
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  inherits
 *    flags:    c
 */
ZEND_METHOD(QObject, inherits){

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: 
		int len_s_0;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s", &var_s_0, len_s_0) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

			
			RETURN_BOOL(obj->inherits( (const char*) var_s_0));
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  eventFilter
 *    flags:    v
 */
ZEND_METHOD(QObject, eventFilter){

	if (ZEND_NUM_ARGS() == 2){
		/* oo */
		zval* z_var_oo_0;   // default: 
		zval* z_var_oo_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"oo", &z_var_oo_0, &z_var_oo_1) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_oo_0 = (QObject*) php_qt_fetch(z_var_oo_0);
			QObject* var_oo_1 = (QObject*) php_qt_fetch(z_var_oo_1);

			QString tmp_oo_0(var_oo_0->metaObject()->className());
			QString tmp_oo_1(var_oo_1->metaObject()->className());
			
			if(tmp_oo_0 == "QObject*" && tmp_oo_1 == "QEvent*") {
				RETURN_BOOL(obj->eventFilter((QObject*) var_oo_0, (QEvent*) var_oo_1));
			}
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  trUtf8
 *    flags:    s
 */
ZEND_METHOD(QObject, trUtf8){

	if (ZEND_NUM_ARGS() == 2){
		/* ss */
		char* var_ss_0;   // default: 
		int len_ss_0;

		char* var_ss_1;   // default: 0
		int len_ss_1;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ss|", &var_ss_0, len_ss_0, &var_ss_1, len_ss_1) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();

									
			QString return_object = (QString) obj->trUtf8( (const char*) var_ss_0 , (const char*) var_ss_1);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QObject_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}
}

/*********************************
 *    class     QObject */
/*
 *    function  qt_property
 *    flags:    v
 */
ZEND_METHOD(QObject, qt_property){

	if (ZEND_NUM_ARGS() == 3){
		/* llo */
		long var_llo_0;    // default: 
		long var_llo_1;    // default: 
		zval* z_var_llo_2;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"llo", &var_llo_0, &var_llo_1, &z_var_llo_2) == SUCCESS) {
			QObject *obj = (QObject*) PHP_QT_FETCH();
			QObject* var_llo_2 = (QObject*) php_qt_fetch(z_var_llo_2);

			QString tmp_llo_0(var_llo_2->metaObject()->className());
			
			if(tmp_llo_0 == "QVariant*") {
				RETURN_BOOL(obj->qt_property((int) var_llo_0, (int) var_llo_1, (QVariant*) var_llo_2));
			}
		}
	}
}


PHP_QT_DESTRUCT(QObject);

