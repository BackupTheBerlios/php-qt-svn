/*
 * PHP-Qt - The PHP language bindings for Qt
 *
 * Copyright (C) 2005
 * Thomas Moenicke <tm@ippfp.org>,
 * Jean-Luc Gyger <jean_luc.gyger@freesurf.ch>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * QAbstractSlider.cpp - QAbstractSlider PHP implementation.
 * begin           : Sun Jan  8 23:20:48 2006
 * generated by    : moni using kalyptus 0.9.
 */

#include <iostream>
using namespace std;

#include <QAbstractSlider>
#include "../php_qt.h"



/*		public enumSliderAction:long {
			SliderAction = 0,
			SliderAction = 1,
			SliderAction = 2,
			SliderAction = 3,
			SliderAction = 4,
			SliderAction = 5,
			SliderAction = 6,
			SliderAction = 7
		}
*/

/*		protected enumSliderChange:long {
			SliderChange = 0,
			SliderChange = 1,
			SliderChange = 2,
			SliderChange = 3
		}
*/
/*********************************
 *    class     QAbstractSlider */
/*
 *    function  tr
 *    flags:    s
 */
ZEND_METHOD(QAbstractSlider, tr){

	if (ZEND_NUM_ARGS() == 2){
		/* ss */
		char* var_ss_0;   // default: 
		int len_ss_0;

		char* var_ss_1;   // default: 0
		int len_ss_1;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ss|", &var_ss_0, len_ss_0, &var_ss_1, len_ss_1) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			QString return_object = (QString) obj->tr( (const char*) var_ss_0 , (const char*) var_ss_1);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QAbstractSlider_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setMaximum
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setMaximum){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setMaximum((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  qt_invoke
 *    flags:    v
 */
ZEND_METHOD(QAbstractSlider, qt_invoke){

	if (ZEND_NUM_ARGS() == 2){
		/* lo */
		long var_lo_0;    // default: 
		zval* z_var_lo_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lo", &var_lo_0, &z_var_lo_1) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QObject* var_lo_1 = (QObject*) php_qt_fetch(z_var_lo_1);

			QString tmp_lo_0(var_lo_1->metaObject()->className());
			
			if(tmp_lo_0 == "QUObject*") {
				RETURN_BOOL(obj->qt_invoke((int) var_lo_0, (QUObject*) var_lo_1));
			}
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setInvertedAppearance
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setInvertedAppearance){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool var_b_0;   // _default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setInvertedAppearance((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  sliderChange
 *    flags:    v
 */
ZEND_METHOD(QAbstractSlider, sliderChange){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "SliderChange") {
				obj->sliderChange((SliderChange) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  qt_cast
 *    flags:    v
 */
ZEND_METHOD(QAbstractSlider, qt_cast){

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: 
		int len_s_0;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s", &var_s_0, len_s_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->qt_cast( (const char*) var_s_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  metaObject
 *    flags:    cv
 */
ZEND_METHOD(QAbstractSlider, metaObject){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QMetaObject * return_object = (QMetaObject *) obj->metaObject();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QAbstractSlider_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  value
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, value){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_LONG(obj->value());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setSliderDown
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setSliderDown){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool var_b_0;   // _default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setSliderDown((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  triggerAction
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, triggerAction){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &z_var_o_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "SliderAction") {
				obj->triggerAction((SliderAction) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  qt_emit
 *    flags:    v
 */
ZEND_METHOD(QAbstractSlider, qt_emit){

	if (ZEND_NUM_ARGS() == 2){
		/* lo */
		long var_lo_0;    // default: 
		zval* z_var_lo_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lo", &var_lo_0, &z_var_lo_1) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QObject* var_lo_1 = (QObject*) php_qt_fetch(z_var_lo_1);

			QString tmp_lo_0(var_lo_1->metaObject()->className());
			
			if(tmp_lo_0 == "QUObject*") {
				RETURN_BOOL(obj->qt_emit((int) var_lo_0, (QUObject*) var_lo_1));
			}
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setRange
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setRange){

	if (ZEND_NUM_ARGS() == 2){
		/* ll */
		long var_ll_0;    // default: 
		long var_ll_1;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ll", &var_ll_0, &var_ll_1) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setRange((int) var_ll_0 ,(int) var_ll_1);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  singleStep
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, singleStep){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_LONG(obj->singleStep());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  className
 *    flags:    cv
 */
ZEND_METHOD(QAbstractSlider, className){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			const char * return_object = (const char *) obj->className();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QAbstractSlider_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  repeatAction
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, repeatAction){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			obj->repeatAction();
			RETURN_NULL();
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setTracking
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setTracking){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool var_b_0;   // _default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setTracking((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  QAbstractSlider
 *    flags:    t
 */
ZEND_METHOD(QAbstractSlider, __construct){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_~(obj->QAbstractSlider());
	}

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* z_var_o_0;   // default: 0

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o|", &z_var_o_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(z_var_o_0);

			QString tmp_o_0(var_o_0->metaObject()->className());
			
			if(tmp_o_0 == "QWidget*") {
				obj->QAbstractSlider((QWidget*) var_o_0);
			RETURN_NULL();
			}
		}
	}

	if (ZEND_NUM_ARGS() == 2){
		/* oo */
		zval* z_var_oo_0;   // default: 
		zval* z_var_oo_1;   // default: 0

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"oo|", &z_var_oo_0, &z_var_oo_1) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QObject* var_oo_0 = (QObject*) php_qt_fetch(z_var_oo_0);
			QObject* var_oo_1 = (QObject*) php_qt_fetch(z_var_oo_1);

			QString tmp_oo_0(var_oo_0->metaObject()->className());
			QString tmp_oo_1(var_oo_1->metaObject()->className());
			
			if(tmp_oo_0 == "QAbstractSliderPrivate&" && tmp_oo_1 == "QWidget*") {
				obj->QAbstractSlider((QAbstractSliderPrivate&) var_oo_0, (QWidget*) var_oo_1);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  sliderPosition
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, sliderPosition){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_LONG(obj->sliderPosition());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setMinimum
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setMinimum){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setMinimum((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  minimum
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, minimum){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_LONG(obj->minimum());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setPageStep
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setPageStep){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setPageStep((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setSliderPosition
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setSliderPosition){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setSliderPosition((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  invertedAppearance
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, invertedAppearance){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_BOOL(obj->invertedAppearance());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  maximum
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, maximum){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_LONG(obj->maximum());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  orientation
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, orientation){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_LONG(obj->orientation());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setValue
 *    flags:    l
 */
ZEND_METHOD(QAbstractSlider, setValue){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setValue((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  staticMetaObject
 *    flags:    s
 */
ZEND_METHOD(QAbstractSlider, staticMetaObject){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QMetaObject* return_object = (QMetaObject*) obj->staticMetaObject();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QAbstractSlider_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  qObject
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, qObject){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QObject* return_object = (QObject*) obj->qObject();
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QAbstractSlider_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setRepeatAction
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setRepeatAction){

	if (ZEND_NUM_ARGS() == 3){
		/* oll */
		zval* z_var_oll_0;   // default: 
		long var_oll_1;    // default: 500
		long var_oll_2;    // default: 50

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ol|l|", &z_var_oll_0, &var_oll_1, &var_oll_2) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QObject* var_oll_0 = (QObject*) php_qt_fetch(z_var_oll_0);

			QString tmp_oll_0(var_oll_0->metaObject()->className());
			
			if(tmp_oll_0 == "SliderAction") {
				obj->setRepeatAction((SliderAction) var_oll_0, (int) var_oll_1, (int) var_oll_2);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  invertedControls
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, invertedControls){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_BOOL(obj->invertedControls());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setSingleStep
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setSingleStep){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setSingleStep((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  isSliderDown
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, isSliderDown){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_BOOL(obj->isSliderDown());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setOrientation
 *    flags:    l
 */
ZEND_METHOD(QAbstractSlider, setOrientation){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l", &var_l_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setOrientation((Qt::Orientation) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  pageStep
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, pageStep){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_LONG(obj->pageStep());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  hasTracking
 *    flags:    c
 */
ZEND_METHOD(QAbstractSlider, hasTracking){
	if (ZEND_NUM_ARGS() == 0){
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			RETURN_BOOL(obj->hasTracking());
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  setInvertedControls
 *    flags:    
 */
ZEND_METHOD(QAbstractSlider, setInvertedControls){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool var_b_0;   // _default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			obj->setInvertedControls((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  trUtf8
 *    flags:    s
 */
ZEND_METHOD(QAbstractSlider, trUtf8){

	if (ZEND_NUM_ARGS() == 2){
		/* ss */
		char* var_ss_0;   // default: 
		int len_ss_0;

		char* var_ss_1;   // default: 0
		int len_ss_1;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ss|", &var_ss_0, len_ss_0, &var_ss_1, len_ss_1) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();

			
			QString return_object = (QString) obj->trUtf8( (const char*) var_ss_0 , (const char*) var_ss_1);
				zend_class_entry *ce;                                   
				object_init_ex(return_value, QAbstractSlider_ce_ptr);     
				zend_rsrc_list_entry le;                            
				le.ptr = &return_object;                                       
				php_qt_register(return_value,le);                   
				return;                                             
		}
	}
}

/*********************************
 *    class     QAbstractSlider */
/*
 *    function  qt_property
 *    flags:    v
 */
ZEND_METHOD(QAbstractSlider, qt_property){

	if (ZEND_NUM_ARGS() == 3){
		/* llo */
		long var_llo_0;    // default: 
		long var_llo_1;    // default: 
		zval* z_var_llo_2;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"llo", &var_llo_0, &var_llo_1, &z_var_llo_2) == SUCCESS) {
			QAbstractSlider *obj = (QAbstractSlider*) PHP_QT_FETCH();
			QObject* var_llo_2 = (QObject*) php_qt_fetch(z_var_llo_2);

			QString tmp_llo_0(var_llo_2->metaObject()->className());
			
			if(tmp_llo_0 == "QVariant*") {
				RETURN_BOOL(obj->qt_property((int) var_llo_0, (int) var_llo_1, (QVariant*) var_llo_2));
			}
		}
	}
}


PHP_QT_DESTRUCT(QAbstractSlider);

