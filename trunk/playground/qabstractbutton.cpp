/*
 * PHP-Qt - The PHP language bindings for Qt
 *
 * Copyright (C) 2005
 * Thomas Moenicke <tm@ippfp.org>,
 * Jean-Luc Gyger <jean_luc.gyger@freesurf.ch>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * QAbstractButton.cpp - QAbstractButton PHP implementation.
 * begin           : Fri Jan  6 00:06:34 2006
 * generated by    : moni using kalyptus 0.9.
 */

#include <iostream>
using namespace std;

#include "../php_qt.h"

#include <QAbstractButton>


/*********************************
 *    class     QAbstractButton */
/*
 *    function  tr
 *    flags:    s
 */
ZEND_METHOD(QAbstractButton, tr){

	if (ZEND_NUM_ARGS() == 2){
		/* ss */
		char* var_ss_0;   // default: 
		int* len_ss_0;

		char* var_ss_1;   // default: 0
		int* len_ss_1;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ss|", &var_0, &len_0, &var_1, &len_1) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();

			
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			QString return_object = (QString) obj->tr( var_0 , var_1);
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QAbstractButton_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  setAutoRepeat
 *    flags:    
 */
ZEND_METHOD(QAbstractButton, setAutoRepeat){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool* var_b_0;   // _default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();

			
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->setAutoRepeat((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  isDown
 *    flags:    c
 */
ZEND_METHOD(QAbstractButton, isDown){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			RETURN_BOOL(obj->isDown());
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  qt_invoke
 *    flags:    v
 */
ZEND_METHOD(QAbstractButton, qt_invoke){

	if (ZEND_NUM_ARGS() == 2){
		/* lo */
		long var_lo_0;    // default: 
		zval* var_lo_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lo", &var_lo_0, &var_lo_1) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();
			QObject* var_o_1 = (QObject*) php_qt_fetch(var_o_1);

			QString tmp_0(var_o_1->metaObject()->className());
			
			if(tmp_0 == "QUObject*") {
				QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			RETURN_BOOL(obj->qt_invoke((int) var_lo_0, (QUObject*) var_o_1));
			}
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  setAutoExclusive
 *    flags:    
 */
ZEND_METHOD(QAbstractButton, setAutoExclusive){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool* var_b_0;   // _default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();

			
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->setAutoExclusive((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  setIconSize
 *    flags:    l
 */
ZEND_METHOD(QAbstractButton, setIconSize){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &var_o_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(var_o_0);

			QString tmp_0(var_o_0->metaObject()->className());
			
			if(tmp_0 == "const QSize&") {
				QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->setIconSize((const QSize&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  qt_cast
 *    flags:    v
 */
ZEND_METHOD(QAbstractButton, qt_cast){

	if (ZEND_NUM_ARGS() == 1){
		/* s */
		char* var_s_0;   // default: 
		int* len_s_0;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"s", &var_0, &len_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();

			
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->qt_cast( var_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  metaObject
 *    flags:    cv
 */
ZEND_METHOD(QAbstractButton, metaObject){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			QMetaObject * return_object = (QMetaObject *) obj->metaObject();
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QAbstractButton_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  setIcon
 *    flags:    
 */
ZEND_METHOD(QAbstractButton, setIcon){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &var_o_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(var_o_0);

			QString tmp_0(var_o_0->metaObject()->className());
			
			if(tmp_0 == "const QIcon&") {
				QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->setIcon((const QIcon&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  qt_emit
 *    flags:    v
 */
ZEND_METHOD(QAbstractButton, qt_emit){

	if (ZEND_NUM_ARGS() == 2){
		/* lo */
		long var_lo_0;    // default: 
		zval* var_lo_1;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"lo", &var_lo_0, &var_lo_1) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();
			QObject* var_o_1 = (QObject*) php_qt_fetch(var_o_1);

			QString tmp_0(var_o_1->metaObject()->className());
			
			if(tmp_0 == "QUObject*") {
				QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			RETURN_BOOL(obj->qt_emit((int) var_lo_0, (QUObject*) var_o_1));
			}
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  autoExclusive
 *    flags:    c
 */
ZEND_METHOD(QAbstractButton, autoExclusive){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			RETURN_BOOL(obj->autoExclusive());
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  className
 *    flags:    cv
 */
ZEND_METHOD(QAbstractButton, className){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			const char * return_object = (const char *) obj->className();
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QAbstractButton_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  toggle
 *    flags:    l
 */
ZEND_METHOD(QAbstractButton, toggle){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->toggle();
			RETURN_NULL();
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  setCheckable
 *    flags:    
 */
ZEND_METHOD(QAbstractButton, setCheckable){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool* var_b_0;   // _default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();

			
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->setCheckable((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  setDown
 *    flags:    
 */
ZEND_METHOD(QAbstractButton, setDown){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool* var_b_0;   // _default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();

			
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->setDown((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  shortcut
 *    flags:    c
 */
ZEND_METHOD(QAbstractButton, shortcut){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			QKeySequence return_object = (QKeySequence) obj->shortcut();
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QAbstractButton_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  icon
 *    flags:    c
 */
ZEND_METHOD(QAbstractButton, icon){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  setChecked
 *    flags:    l
 */
ZEND_METHOD(QAbstractButton, setChecked){

	if (ZEND_NUM_ARGS() == 1){
		/* b */
		bool* var_b_0;   // _default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"b", &var_b_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();

			
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->setChecked((bool) var_b_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  setShortcut
 *    flags:    
 */
ZEND_METHOD(QAbstractButton, setShortcut){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &var_o_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(var_o_0);

			QString tmp_0(var_o_0->metaObject()->className());
			
			if(tmp_0 == "const QKeySequence&") {
				QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->setShortcut((const QKeySequence&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  animateClick
 *    flags:    l
 */
ZEND_METHOD(QAbstractButton, animateClick){

	if (ZEND_NUM_ARGS() == 1){
		/* l */
		long var_l_0;    // default: 100

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"l|", &var_l_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();

			
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->animateClick((int) var_l_0);
			RETURN_NULL();
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  staticMetaObject
 *    flags:    s
 */
ZEND_METHOD(QAbstractButton, staticMetaObject){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			QMetaObject* return_object = (QMetaObject*) obj->staticMetaObject();
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QAbstractButton_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  autoRepeat
 *    flags:    c
 */
ZEND_METHOD(QAbstractButton, autoRepeat){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			RETURN_BOOL(obj->autoRepeat());
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  qObject
 *    flags:    
 */
ZEND_METHOD(QAbstractButton, qObject){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			QObject* return_object = (QObject*) obj->qObject();
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QAbstractButton_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  group
 *    flags:    c
 */
ZEND_METHOD(QAbstractButton, group){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			QButtonGroup * return_object = (QButtonGroup *) obj->group();
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QAbstractButton_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  setText
 *    flags:    
 */
ZEND_METHOD(QAbstractButton, setText){

	if (ZEND_NUM_ARGS() == 1){
		/* o */
		zval* var_o_0;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"o", &var_o_0) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();
			QObject* var_o_0 = (QObject*) php_qt_fetch(var_o_0);

			QString tmp_0(var_o_0->metaObject()->className());
			
			if(tmp_0 == "const QString&") {
				QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->setText((const QString&) var_o_0);
			RETURN_NULL();
			}
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  text
 *    flags:    c
 */
ZEND_METHOD(QAbstractButton, text){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			QString return_object = (QString) obj->text();
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QAbstractButton_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  isChecked
 *    flags:    c
 */
ZEND_METHOD(QAbstractButton, isChecked){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			RETURN_BOOL(obj->isChecked());
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  iconSize
 *    flags:    c
 */
ZEND_METHOD(QAbstractButton, iconSize){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			QSize return_object = (QSize) obj->iconSize();
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QAbstractButton_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  QAbstractButton
 *    flags:    
 */
ZEND_METHOD(QAbstractButton, QAbstractButton){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			RETURN_~(obj->QAbstractButton());
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  isCheckable
 *    flags:    c
 */
ZEND_METHOD(QAbstractButton, isCheckable){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			RETURN_BOOL(obj->isCheckable());
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  click
 *    flags:    l
 */
ZEND_METHOD(QAbstractButton, click){
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			obj->click();
			RETURN_NULL();
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  qt_property
 *    flags:    v
 */
ZEND_METHOD(QAbstractButton, qt_property){

	if (ZEND_NUM_ARGS() == 3){
		/* llo */
		long var_llo_0;    // default: 
		long var_llo_1;    // default: 
		zval* var_llo_2;   // default: 

		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"llo", &var_llo_0, &var_llo_1, &var_llo_2) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();
			QObject* var_o_2 = (QObject*) php_qt_fetch(var_o_2);

			QString tmp_0(var_o_2->metaObject()->className());
			
			if(tmp_0 == "QVariant*") {
				QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			RETURN_BOOL(obj->qt_property((int) var_llo_0, (int) var_llo_0, (QVariant*) var_o_2));
			}
		}
	}
}

/*********************************
 *    class     QAbstractButton */
/*
 *    function  trUtf8
 *    flags:    s
 */
ZEND_METHOD(QAbstractButton, trUtf8){

	if (ZEND_NUM_ARGS() == 2){
		/* ss */
		char* var_ss_0;   // default: 
		int* len_ss_0;

		char* var_ss_1;   // default: 0
		int* len_ss_1;


		if(zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC,"ss|", &var_0, &len_0, &var_1, &len_1) == SUCCESS) {
			QAbstractButton *obj = (QAbstractButton*) PHP_QT_FETCH();

			
			QAbstractButton *obj = (QAbstractButton) PHP_QT_FETCH();
			QString return_object = (QString) obj->trUtf8( var_0 , var_1);
			zend_class_entry *ce;                                   
			object_init_ex(return_value, QAbstractButton_ce_ptr);     
			zend_rsrc_list_entry le;                            
			le.ptr = &return_object;                                       
			php_qt_register(return_value,le);                   
			return;                                             
		}
	}
}



ZEND_METHOD(QAbstractButton,__construct){

	QAbstractButton *QAbstractButton_ptr = new QAbstractButton();

	PHP_QT_REGISTER(QAbstractButton_ptr);
	RETURN_NULL();
}

PHP_QT_DESTRUCT(QAbstractButton);

